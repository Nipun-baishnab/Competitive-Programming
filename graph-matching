max bipartite matching ... 

kuhn runs for O(n*m) 

bool kuhn(int u)
{
    for(int v=1; v<=m; ++v)
    {
        if(di[u][v] and !vis[v])
        {
            vis[v]=1 ;
            if(p[v]==-1 or kuhn(p[v]))
            {
                p[v]=u ;
                return 1 ;
            }
        }
    }
    return 0 ;
}
 
void max_match()
{
    memset(p,-1,sizeof(p)) ;
    for(int i=1; i<=m; ++i)
    {
        memset(vis,0,sizeof(vis)) ;
        kuhn(i) ;
    }
    for(int i=1; i<=m; ++i)
    {
        if(p[i]!=-1)
        {
            sub[p[i]]=i ;
        }
    }
}

