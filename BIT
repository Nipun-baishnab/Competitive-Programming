/// BIT is known as Binary Indexed Tree or Fenwick Tree.  
/// Only works for range [l, r] update / query for summation. 
/// If you need to find maximum / minimum of any range [l, r], then you should use Segment Tree. 
/// It's faster than Segment Tree 

const int N = 1e6+7; 

int tree[N]; 

void update(int idx, int x,int n)
{
	while(idx<=n)
	{
		tree[idx]+=x;
		idx+=(idx&-idx);
	}
}

int query(int idx)
{
	int sum=0;
	while(idx>0)
	{
		sum+=tree[idx];
		idx-=(idx&-idx);
	}
	return sum ;
}

int ask(int l,int r)
{
    return query(r) - query(l-1) ; 
}
