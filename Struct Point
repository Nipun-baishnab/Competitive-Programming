/// learnt from https://codeforces.com/contest/394/submission/13185760


struct Point{
    long double x,y ;
    Point(long double _x=0 , long double _y=0){x=_x , y=_y ;}
    Point operator-(const Point& b){return Point(x-b.x,y-b.y);}
    Point operator+(const Point& b){return Point(x+b.x,y+b.y);}
    Point operator/(long double v){return Point(x/v,y/v);}
    Point operator*(long double v){return Point(x*v,y*v);}
    bool  operator<(const Point& rhs){
          return x<rhs.x or (x==rhs.x and y<rhs.y) ;
    }

    long double dis(){
        return x*x+y*y ;
    }
    long double calco(Point arr[]){
         long double ans=0 ;
         for(int i=1;i<=n;++i)
            ans+=(arr[i]-(*this)).dis() ;
         return ans ;
    }
}p[100010],yo[100010];


int Orientation(Point a[]){
    long double res=0 ;
    a[3]=a[0] ;
    for(int i=0;i<3;++i){
        res+=(a[i].x*a[i+1].y)-(a[i].y*a[i+1].x) ;
    }
    if(res<0.0)return -1 ; /// clockwise ...
    else if(res>0.0)return +1 ; /// counterclockwise ...
    return 0 ; /// colinear ...
}

int main(){

    Point rp(0,0) ;
 
    for(int i=1;i<=n;++i){
        long double x , y ;
        cin>>x>>y ;
        p[i]=Point(x,y) ;
        rp=rp+p[i] ;
    }
 
    rp=rp/n ;
}
