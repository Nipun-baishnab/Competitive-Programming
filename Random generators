https://codeforces.com/contest/364/submission/173683838 
https://codeforces.com/contest/364/submission/173683390

prac prob : https://codeforces.com/problemset/problem/1800/G
toky's code for random generator 

// #pragma GCC optimize("Ofast,unroll-loops")
// #pragma GCC target("avx,avx2,fma")

#include <bits/stdc++.h>
using namespace std;

#define ll long long
#define pii pair<int, int>
#define pll pair<long long, long long>
#define pb push_back
#define ff first
#define ss second
#define YES cout << "YES\n"
#define NO cout << "NO\n"
#define CC(x) cout << "Case " << ++x << ":";
#define nn "\n"
#define LL_INF (1LL << 62)
#define INF (1 << 30)
#define SetBit(x, k) (x |= (1LL << k))
#define ClearBit(x, k) (x &= ~(1LL << k))
#define CheckBit(x, k) ((x>>k)&1)
#define mod 998244353
#define N 300005

mt19937_64 rng(chrono::steady_clock::now().time_since_epoch().count());

inline ll gen_random(ll l, ll r) {
    return uniform_int_distribution<ll>(l, r)(rng);
}

unsigned ll vals[6][N];
vector<int> g[N];
unsigned ll dis[N], sz[N], deg[N], par_deg[N], par[N];
unsigned ll hsh[N];

void dfs(int u, int p){
    dis[u] = dis[p]+1;
    sz[u] = 1;
    par[u] = p;
    if(u!=1) deg[u] = 1;

    for(int v: g[u]){
        if(v==p) continue;
        dfs(v, u);
        sz[u] += sz[v];
        deg[u]++;
    }
}

void get_hash(int u, int p){
    unsigned ll h = vals[0][dis[u]]*vals[1][sz[u]]*vals[2][deg[u]]*vals[3][par_deg[par[u]]];
    unsigned ll z = 1;
    for(int v: g[u]){
        if(v==p) continue;
        get_hash(v, u);
        z *= hsh[v];
    }
    h += z;
    hsh[u] = h;
}

int check(int u, int p){
    map<unsigned ll, int> mp;
    map<unsigned ll, int> mp2;
    
    for(int v: g[u]){
        if(v==p) continue;
        mp[hsh[v]]++;
        mp2[hsh[v]] = v;
    }

    vector<int> z;
    for(auto it: mp){
        if(it.ss%2==0) continue;
        z.pb(mp2[it.ff]);
    }

    if(z.size()>1) return 0;
    if(z.empty()) return 1;
    return check(z[0], u);
}

int main()
{
    ios::sync_with_stdio(false);
    cin.tie(0);

    for(int i = 0; i < N; i++){
        for(int j = 0; j < 4; j++){
            vals[j][i] = gen_random(0, 1e17);
        }
    }
    
    int t;
	cin >> t;
	while(t--){
	    int n;
        cin >> n;

        for(int i = 0; i <= n; i++){
            g[i].clear();
        }

        for(int i = 0; i < n-1; i++){
            int u, v;
            cin >> u >> v;
            g[u].pb(v);
            g[v].pb(u);
        }

        dfs(1, 0);
        get_hash(1, 0);

        if(check(1, 0)) YES;
        else NO;
	}

    return 0;
}
