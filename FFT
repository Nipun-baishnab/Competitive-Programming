/*
https://codeforces.com/problemset/problem/1218/E
/**/

#include <bits/stdc++.h>
using namespace std;

const int N = 1e6 + 100, mod = 998244353;

struct NTT {
    vector<int>A, B, w[2], rev;
    int P = mod, M, G = 3;
    int Pow(int a, int b) {
        int res=1;
        for (;b; b>>=1,a=a*1LL*a%P) if (b&1) res=res*1LL*a%P;
        return res;
    }
    void init( int n ) {
        for (M=1; M<n; M<<=1);
        M<<=1;
        A.resize(M); B.resize(M);
        w[0].resize(M); w[1].resize(M);
        rev.resize(M);
        for (int i=0; i<M; i++) {
            int x=i, &y=rev[i];
            y=0;
            for (int k=1; k<M; k<<=1,x>>=1)
                (y<<=1)|=x&1;
        }
        int x=Pow(G,(P-1)/M),y=Pow(x,P-2);
        w[0][0]=w[1][0]=1;
        for (int i=1; i<M; i++) {
            w[0][i]=w[0][i-1]*1LL*x%P;
            w[1][i]=w[1][i-1]*1LL*y%P;
        }
    }
    void ntransform(vector<int> &a, int f) {
        for (int i=0; i<M; i++)
            if (i<rev[i]) swap(a[i],a[rev[i]]);
        for (int i=1; i<M; i<<=1)
            for (int j=0,t=M/(i<<1); j<M; j+=i<<1)
                for (int k=0,l=0; k<i; k++,l+=t) {
                    int x=a[j+k+i]*1ll*w[f][l]%P;
                    int y=a[j+k];
                    a[j+k+i]=y-x<0?y-x+P:y-x;
                    a[j+k]=y+x>=P?y+x-P:y+x;
                }
        if (f) {
            int x=Pow(M,P-2);
            for (int i=0; i<M; i++) a[i]=a[i]*1ll*x%P;
        }
    }

    void multiply( vector<int> &X, vector<int> &Y,
                  vector<int> &res) {
        init(max(X.size(), Y.size()));
        for( int i = 0; i < M; i++ ) A[i] = B[i] = 0;
        for( int i = 0; i < X.size(); i++ ) A[i] = X[i];
        for( int i = 0; i < Y.size(); i++ ) B[i] = Y[i];
        ntransform(A,0); ntransform(B,0);
        res.clear(); res.resize(M);
        for (int i=0; i<M; i++)
            res[i]=A[i]*1LL*B[i]%P;
        ntransform(res,1);
    }
}ntt;

int A[N], B[N];

int main() {
    // freopen("in.txt", "r", stdin);
    ios::sync_with_stdio(0);
    cin.tie(0);

    int n, k;
    cin >> n >> k;
    for(int i = 1; i <= n; i++) {
        cin >> A[i];
    }
    int q;
    cin >> q;
    while(q--) {
        int t, l, r, d, x;
        cin >> t;
        if(t == 1) {
            cin >> x >> l >> d;
            int y = A[l];
            A[l] = d;
            for(int i = 1; i <= n; i++) {
                B[i] = x-A[i];
                B[i] %= mod;
                B[i] += mod;
                B[i] %= mod;
            }
            A[l] = y;
        }
        else {
            cin >> x >> l >> r >> d;
            for(int i = 1; i <= n; i++) {
                B[i] = x;
                if(i >= l && i <= r) B[i] -= A[i]+d;
                else B[i] -= A[i];
                B[i] %= mod;
                B[i] += mod;
                B[i] %= mod;
            }
        }

        vector<vector<int>> res(n+1);
        priority_queue<pair<int,int>> pq;
        for(int i = 1; i <= n; i++) {
            res[i] = {1, B[i]};
            pq.push({-2, i});
        }
        while(pq.size() > 1) {
            int x = pq.top().second;
            pq.pop();
            int y = pq.top().second;
            pq.pop();
            ntt.multiply(res[x], res[y], res[x]);
            pq.push({-res[x].size(), x});
        }
        cout << res[pq.top().second][k] << "\n";
    }

    return 0;
}

